[1/10] Performing build step for 'bootloader'
[1/1] cd /home/bvsirghe/esp-idf/projects/blink-led/build/bootloader/esp-idf/esptool_py && /home/bvsirghe/.espressif/python_env/idf5.2_py3.11_env/bin/python /home/bvsirghe/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/bvsirghe/esp-idf/projects/blink-led/build/bootloader/bootloader.bin
Bootloader binary size 0x68d0 bytes. 0x730 bytes (6%) free.
[2/10] No install step for 'bootloader'
[3/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/blink-led.c.obj
[4/10] Completed 'bootloader'
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable blink-led.elf
[8/10] Generating binary image from built executable
esptool.py v4.6.2
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/bvsirghe/esp-idf/projects/blink-led/build/blink-led.bin
[9/10] cd /home/bvsirghe/esp-idf/projects/blink-led/build/esp-idf/esptool_py && /home/bvsirghe/.espressif/python_env/idf5.2_py3.11_env/bin/python /home/bvsirghe/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/bvsirghe/esp-idf/projects/blink-led/build/partition_table/partition-table.bin /home/bvsirghe/esp-idf/projects/blink-led/build/blink-led.bin
blink-led.bin binary size 0x2cd50 bytes. Smallest app partition is 0x100000 bytes. 0xd32b0 bytes (82%) free.
[9/10] cd /home/bvsirghe/esp/esp-idf/components/esptool_py && /opt/cmake-3.27.1/bin/cmake -D IDF_PATH=/home/bvsirghe/esp/esp-idf -D "SERIAL_TOOL=/home/bvsirghe/.espressif/python_env/idf5.2_py3.11_env/bin/python;;/home/bvsirghe/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/bvsirghe/esp-idf/projects/blink-led/build -P /home/bvsirghe/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool esp32 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 blink-led.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.6.2
Serial port /dev/ttyUSB0
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: cc:db:a7:62:f9:a0
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0003cfff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26832 bytes to 16846...
Writing at 0x00001000... (50 %)
Writing at 0x00007681... (100 %)
Wrote 26832 bytes (16846 compressed) at 0x00001000 in 0.7 seconds (effective 319.4 kbit/s)...
Hash of data verified.
Compressed 183632 bytes to 101152...
Writing at 0x00010000... (14 %)
Writing at 0x0001c90d... (28 %)
Writing at 0x0002228e... (42 %)
Writing at 0x00027f85... (57 %)
Writing at 0x0002e235... (71 %)
Writing at 0x00035fcd... (85 %)
Writing at 0x0003bb76... (100 %)
Wrote 183632 bytes (101152 compressed) at 0x00010000 in 2.6 seconds (effective 567.4 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 590.3 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
